{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #!/bin/bash\
\
set -e  # Exit immediately if any command fails\
\
# Colors for output\
GREEN='\\033[0;32m'\
RED='\\033[0;31m'\
NC='\\033[0m' # No Color\
\
echo "Verifying setup..."\
\
# 1. Check Dockerfile content\
if ! grep -q "RUN python -m nltk.downloader punkt" Dockerfile || \\\
   ! grep -q "COPY --from=builder /root/nltk_data /home/appuser/nltk_data" Dockerfile || \\\
   ! grep -q "RUN pip install --no-cache-dir wheel" Dockerfile; then\
  echo -e "$\{RED\}Dockerfile check FAILED.$\{NC\}"\
  exit 1\
fi\
echo -e "$\{GREEN\}Dockerfile check PASSED.$\{NC\}"\
\
# 2. Check requirements.txt content\
if ! grep -q "spacy==3.7.4" requirements.txt || \\\
   ! grep -q "blis==0.7.11" requirements.txt || \\\
   ! grep -q "SPARQLWrapper" requirements.txt ;\
then\
  echo -e "$\{RED\}requirements.txt check FAILED.$\{NC\}"\
  exit 1\
fi\
echo -e "$\{GREEN\}requirements.txt check PASSED.$\{NC\}"\
\
# 3. Check data_acquisition.py content\
if ! grep -q "from SPARQLWrapper import SPARQLWrapper, JSON" data_acquisition.py; then\
  echo -e "$\{RED\}data_acquisition.py check FAILED.$\{NC\}"\
  exit 1\
fi\
echo -e "$\{GREEN\}data_acquisition.py check PASSED.$\{NC\}"\
\
# 4. Attempt a quick build (without running)\
echo "Attempting a test build..."\
docker build --no-cache -t my-streamlit-app-test .\
if [ $? -eq 0 ]; then\
  echo -e "$\{GREEN\}Test build PASSED.$\{NC\}"\
else\
  echo -e "$\{RED\}Test build FAILED.$\{NC\}"\
  exit 1\
fi\
\
docker rmi my-streamlit-app-test\
\
echo -e "$\{GREEN\}All checks PASSED! Setup looks good.$\{NC\}"}